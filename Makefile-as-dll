TESTING_FLAG = -DTESTING
WARNING_FLAGS = -Wall -Wextra -Wpedantic -Werror
CXXFLAGS = -std=c++17 $(WARNING_FLAGS) -O3 -g

PROJECT = prism

LIBRARY_NAME = lib$(PROJECT).so

# Directories
SRCDIR = src
INCDIR = include
BUILDDIR = build

# Source and header files
SOURCES = $(wildcard $(SRCDIR)/*.C)
HEADERS = $(wildcard $(INCDIR)/*.h)
OBJECTS = $(patsubst $(SRCDIR)/%.C,$(BUILDDIR)/%.o,$(SOURCES))

# Include and library paths
INCLUDE_PATH = -I$(CONDA_PREFIX)/include
LIBRARY_PATH = -L$(CONDA_PREFIX)/lib

YAML_LINK = -lyaml-cpp
FMT_LINK = -lfmt

LINKS = $(YAML_LINK) $(FMT_LINK)

UNAME_S := $(shell uname -s) 
# Build the shared library
$(LIBRARY_NAME): $(OBJECTS)
	@echo "Building $(LIBRARY_NAME)"
	@$(CXX) $(CXXFLAGS) $(INCLUDE_PATH) $(LIBRARY_PATH) -I$(INCDIR) -shared -o $@ $(OBJECTS) $(LINKS)
	@echo "$(LIBRARY_NAME) built successfully!"

# Build all of the source files for the library
# -fPIC flag is required for linux shared_object build
$(BUILDDIR)/%.o: $(SRCDIR)/%.C
	@mkdir -p $(@D)
	@echo "Building $<"
	@$(CXX) $(CXXFLAGS) -fPIC -I$(INCDIR)/$(PROJECT) $(INCLUDE_PATH) -c $< -o $@

# Rule to create the library and executable
all: $(LIBRARY_NAME)

# Clean the build artifacts
clean:
	@rm -rf *.dSYM
	@rm -f $(LIBRARY_NAME)
	@rm -rf $(BUILDDIR)/*

# TODO add the rpath modification for linux as well 
install: all
	@mkdir -p $(CONDA_PREFIX)/include/$(PROJECT)
	@cp -r $(INCDIR)/$(PROJECT) $(CONDA_PREFIX)/include
	@mv $(LIBRARY_NAME) $(CONDA_PREFIX)/lib
	@echo "Setting rpath for libprism.so"
	@if [ "$(UNAME_S)" = "Darwin" ]; then \
		@install_name_tool -id @rpath/libprism.so $(CONDA_PREFIX)/lib/libprism.so; \
	else \ 
		@echo "Unsupported OS type $(UNAME_S)"; \
		exit 1; \
	fi 

uninstall: clean
	@rm -rf $(CONDA_PREFIX)/include/$(PROJECT)
	@rm -f $(CONDA_PREFIX)/lib/$(LIBRARY_NAME)

install-testing: CXXFLAGS += $(TESTING_FLAG)
install-testing: install

.PHONY: all clean
